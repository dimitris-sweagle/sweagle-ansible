- name: Start MongoDB Server
  systemd:
    name: "{{ mongodb_daemon_name }}"
    state: started

- name: Check SWEAGLE user exists
  shell: mongo "{{ sweagle_mongo_db }}" --eval 'db.getUsers()'
  register: mongo_users

#- name: Check if some user is not there already - try to get user list as anonymous
#   shell: /bin/mongo --eval 'db.getUsers()' admin
#   ignore_errors: true
#   register: getusers
#   changed_when: false

- debug:
    msg: "Mongo users config {{ item.item }} does not contain user {{ sweagle_mongo_user }}"
  register: user_output
  when: item.stdout.find("{{ sweagle_mongo_user }}") == -1
  with_items: '{{ mongo_users.results }}'
  ignore_errors: true

#- name: Extract user
#  shell: echo "{{ mongo_users.results }}" | grep "{{ mongodb_user }}"."{{ sweagle_mongo_user }}"
#  register: user_output
#  ignore_errors: true

- name: Create MongoDB SWEAGLE Databases
  shell: mongo --eval 'db.getSiblingDB("{{ item }}")'
  with_items:
    - "{{ sweagle_mongo_db }}"
    - admin
  when: user_output.rc != 0

- name: create MongoDB SWEAGLE user
  mongodb_user:
    database: "{{ sweagle_mongo_db }}"
    name: "{{ sweagle_mongo_user }}"
    password: "{{ sweagle_mongo_password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles:
      - { db: "{{ mongodb_user }}", role: "readWrite" }
    login_port: "{{ mongodb_net_port }}"
  no_log: true



#- name: Create MongoDB SWEAGLE Users
#  shell: mongo {{ mongodb_user }} --eval 'printjson(db.createUser({ user:"{{ sweagle_mongo_user }}", pwd:"{{ sweagle_mongo_password }}", roles:[{ role:"readWrite", db:"{{ mongodb_user }}"}]}))'
#  when: user_output.rc != 0
