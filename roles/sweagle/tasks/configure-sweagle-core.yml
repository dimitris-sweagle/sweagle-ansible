---
- name: Get Vault token
  set_fact: sweagle_vault_token="{{ vault_token }}"
  when: (sweagle_vault_token is undefined or sweagle_vault_token == "")
    and vault_token != ""
  tags: [ sweagle, sweagle-core, sweagle-vault ]

- name: Get user input - Vault token
  pause:
    prompt: "Please paste your vault token"
    echo: true
  register: result
  when: sweagle_vault_token is undefined or sweagle_vault_token == ""
  tags: [ sweagle, sweagle-core ]

- name: Set vault token
  set_fact:
    sweagle_vault_token: "{{ result.user_input }}"
  when: sweagle_vault_token is undefined or sweagle_vault_token == ""
  tags: [ sweagle, sweagle-core ]

- name: Get user input - License key
  pause:
    prompt: "Please paste your license key"
    echo: true
  register: result
  when: sweagle_license_key is undefined or sweagle_license_key == ""
  tags: [ sweagle, sweagle-core ]

- name: Set license key var
  set_fact:
    sweagle_license_key: "{{ result.user_input }}"
  when: sweagle_license_key is undefined or sweagle_license_key == ""
  tags: [ sweagle, sweagle-core ]

- name: Configure core application.yml
  template:
    src: "{{ sweagle_version }}/core-application.yml.j2"
    dest: "{{ sweagle_installation_folder }}/bin/core/application.yml"
  tags: [ sweagle, sweagle-core ]

- name: Create service core
  shell: "{{ sweagle_installation_folder }}/scripts/createService.sh sweagleCore {{ sweagle_installation_folder }}/bin/core core-{{ sweagle_version }}.jar {{ sweagle_core_xmx }}"
  become: true
  when: sweagle_create_services
  tags: [ sweagle, sweagle-core ]

- name: Enable and start core service
  service:
    name: "sweagleCore"
    state: started
    enabled: yes
  become: true
  when: sweagle_create_services
  tags: [ sweagle, sweagle-core ]

- name: Wait for core to startup
  wait_for: host=localhost port={{ sweagle_core_port }} delay=15 connect_timeout=5 timeout=120
  when: sweagle_create_services
  tags: [ sweagle, sweagle-core ]
