---
# Configure MYSQL specifc Settings
- name: Create MySQL system group "{{mysql_system_group }}"
  group:
    name: "{{ mysql_system_group }}"
    state: present
  become: true
  tags: mysql

- name: Create MySQL system user "{{mysql_system_user }}"
  user:
    name: "{{mysql_system_user }}"
    groups: "{{ mysql_system_group }}"
    state: present
  become: true
  tags: mysql

## Not supported yet
#- name: Create MySQL folders
#  file:
#    path: "{{ item }}"
#    state: directory
#    owner: "{{ mysql_system_user }}"
#    group: "{{ mysql_system_group }}"
#    recurse: true
#    mode: 0755
#  with_items:
#    - "{{ mysql_data_dir }}"
#    - "{{ mysql_log_dir }}"
#  become: true
#  tags: mysql

# Set root password for MySQL >= 5.7.x.
- name: Update MySQL root password for localhost root account (5.7.x).
  shell: >
    mysql -u {{ mysql_root_user }} -NBe
    'ALTER USER "{{ mysql_root_user }}"@localhost
    IDENTIFIED WITH mysql_native_password BY "{{ mysql_root_password }}";'
  become: true
  become_user: root
  when: mysql_root_password_update
    and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout)
    and ansible_os_family == "Debian"
  tags: mysql
  when: not -ansible_check_mode

# Set root password for MySQL < 5.7.x.
- name: Update MySQL root password for localhost root account (< 5.7.x).
  shell: >
    mysql -NBe
    'SET PASSWORD FOR "{{ mysql_root_user }}"@localhost = PASSWORD("{{ mysql_root_password }}");'
  become: true
  become_user: root
  when: mysql_root_password_update
    and ('5.7.' not in mysql_cli_version.stdout and '8.0.' not in mysql_cli_version.stdout)
    and ansible_os_family == "Debian"
  tags: mysql
  when: not -ansible_check_mode

- name: Find temporary root password for Red Hat
  shell: "echo `grep 'temporary.*root@localhost' /var/log/mysqld.log | sed 's/.*root@localhost: //'`"
  register: mysql_root_password_temp
  when: mysql_root_password_update and ansible_os_family == "RedHat"
  tags: mysql

- debug:
    msg: "{{ mysql_root_password_temp.stdout }}"
  when: mysql_root_password_update and ansible_os_family == "RedHat"
  tags: mysql

- name: Set new root password for Red Hat
  shell: >
    mysql -u {{ mysql_root_user }}  -p"{{ mysql_root_password_temp.stdout }}" --connect-expired-password -e
    "SET PASSWORD = PASSWORD('{{ mysql_root_password }}');"
# OR
#    mysql -u {{ mysql_root_user }} -p{{ mysql_root_password_temp.stdout }} --connect-expired-password -e
#    'ALTER USER "{{ mysql_root_user }}"@localhost
#    IDENTIFIED WITH mysql_native_password BY "{{ mysql_root_password }}";'
  become: true
  become_user: root
  when: mysql_root_password_update and ansible_os_family == "RedHat"
  # Ignore errors for this task as maybe user password has already been updated in previous run
  ignore_errors: true
  tags: mysql

# Has to be after the password assignment, for idempotency.
- name: Configure MySQL
  template:
    src: "my.cnf.j2"
    dest: "{{ mysql_config_dir }}/my.cnf"
    mode: preserve
  become: true
  become_user: root
  notify: Restart MySQL
  tags: mysql
